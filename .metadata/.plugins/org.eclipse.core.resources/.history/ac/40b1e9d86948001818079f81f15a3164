package downloader;

import java.util.Random;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import javax.swing.JProgressBar;

public class Download implements Runnable {

	JProgressBar balken;
	int count = 0;
	private Lock lock = new ReentrantLock();


	public Download(JProgressBar balken) {
		this.balken = balken;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub

		for (int i = 0; i < 100; i++) {

			try {
				lock.await();
				Thread.sleep(new Random().nextInt(500));
				this.balken.setValue(++count);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
	}

}
